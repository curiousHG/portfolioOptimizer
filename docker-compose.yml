
services:
  # Frontend Service
  # ui:
  #   build:
  #     context: ./ui
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - server
  #   networks:
  #     - app-network

  # Backend Service
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "5001:${SERVER_PORT}"
    depends_on:
      - data-fetch-service
      - analytics-service
      - redis
      - postgres
    networks:
      - app-network
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - PORT=${SERVER_PORT}

  # Data Fetch Service
  data-fetch-service:
    build:
      context: ./data-service
      dockerfile: Dockerfile
    depends_on:
      - redis
      - postgres
    networks:
      - app-network
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - PORT=${DATA_SERVICE_PORT}

  # Analytics Service
  analytics-service:
    build:
      context: ./analytics-service
      dockerfile: Dockerfile
    depends_on:
      - postgres
    networks:
      - app-network
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - PORT=${ANALYTICS_SERVICE_PORT}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}

  # Redis Cache
  redis:
    image: redis:alpine
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - app-network

  # PostgreSQL Database
  postgres:
    image: postgres:alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - postgres_data:/var/lib/postgresql/data

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
